<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.besbing.Dao.QcTaskSMapper">
  <resultMap id="BaseResultMap" type="cn.besbing.Entities.QcTaskS">
    <id column="PK_TASK_S" jdbcType="CHAR" property="pkTaskS" />
    <result column="PK_TESTCONDITIONITEM" jdbcType="VARCHAR" property="pkTestconditionitem" />
    <result column="CONDITIONSTATUS" jdbcType="VARCHAR" property="conditionstatus" />
    <result column="ISOPTIONAL" jdbcType="CHAR" property="isoptional" />
    <result column="ISALLOW_OUT" jdbcType="CHAR" property="isallowOut" />
    <result column="INSTRUMENT" jdbcType="VARCHAR" property="instrument" />
    <result column="PK_VALUETYPE" jdbcType="VARCHAR" property="pkValuetype" />
    <result column="VALUEWAYS" jdbcType="DECIMAL" property="valueways" />
    <result column="TEXTVALUE" jdbcType="VARCHAR" property="textvalue" />
    <result column="REFVALUE" jdbcType="VARCHAR" property="refvalue" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="FORMATTED_ENTRY" jdbcType="VARCHAR" property="formattedEntry" />
    <result column="MIN_LIMIT" jdbcType="DECIMAL" property="minLimit" />
    <result column="MAX_LIMIT" jdbcType="DECIMAL" property="maxLimit" />
    <result column="ENGLISHDESCRIPTION" jdbcType="VARCHAR" property="englishdescription" />
    <result column="PK_LIST_TABLE" jdbcType="CHAR" property="pkListTable" />
    <result column="PK_TASK_B" jdbcType="CHAR" property="pkTaskB" />
    <result column="TS" jdbcType="CHAR" property="ts" />
    <result column="DR" jdbcType="DECIMAL" property="dr" />
    <result column="PK_TESTCONDITIONITEM_BACK" jdbcType="VARCHAR" property="pkTestconditionitemBack" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PK_TASK_S, PK_TESTCONDITIONITEM, CONDITIONSTATUS, ISOPTIONAL, ISALLOW_OUT, INSTRUMENT, 
    PK_VALUETYPE, VALUEWAYS, TEXTVALUE, REFVALUE, UNIT, FORMATTED_ENTRY, MIN_LIMIT, MAX_LIMIT, 
    ENGLISHDESCRIPTION, PK_LIST_TABLE, PK_TASK_B, TS, DR, PK_TESTCONDITIONITEM_BACK
  </sql>
  <select id="selectByExample" parameterType="cn.besbing.Entities.QcTaskSExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from QC_TASK_S
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from QC_TASK_S
    where PK_TASK_S = #{pkTaskS,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from QC_TASK_S
    where PK_TASK_S = #{pkTaskS,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.besbing.Entities.QcTaskSExample">
    delete from QC_TASK_S
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.besbing.Entities.QcTaskS">
    insert into QC_TASK_S (PK_TASK_S, PK_TESTCONDITIONITEM, CONDITIONSTATUS, 
      ISOPTIONAL, ISALLOW_OUT, INSTRUMENT, 
      PK_VALUETYPE, VALUEWAYS, TEXTVALUE, 
      REFVALUE, UNIT, FORMATTED_ENTRY, 
      MIN_LIMIT, MAX_LIMIT, ENGLISHDESCRIPTION, 
      PK_LIST_TABLE, PK_TASK_B, TS, DR, 
      PK_TESTCONDITIONITEM_BACK)
    values (#{pkTaskS,jdbcType=CHAR}, #{pkTestconditionitem,jdbcType=VARCHAR}, #{conditionstatus,jdbcType=VARCHAR}, 
      #{isoptional,jdbcType=CHAR}, #{isallowOut,jdbcType=CHAR}, #{instrument,jdbcType=VARCHAR}, 
      #{pkValuetype,jdbcType=VARCHAR}, #{valueways,jdbcType=DECIMAL}, #{textvalue,jdbcType=VARCHAR}, 
      #{refvalue,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{formattedEntry,jdbcType=VARCHAR}, 
      #{minLimit,jdbcType=DECIMAL}, #{maxLimit,jdbcType=DECIMAL}, #{englishdescription,jdbcType=VARCHAR}, 
      #{pkListTable,jdbcType=CHAR}, #{pkTaskB,jdbcType=CHAR}, #{ts,jdbcType=CHAR}, #{dr,jdbcType=DECIMAL}, 
      #{pkTestconditionitemBack,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.besbing.Entities.QcTaskS">
    insert into QC_TASK_S
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkTaskS != null">
        PK_TASK_S,
      </if>
      <if test="pkTestconditionitem != null">
        PK_TESTCONDITIONITEM,
      </if>
      <if test="conditionstatus != null">
        CONDITIONSTATUS,
      </if>
      <if test="isoptional != null">
        ISOPTIONAL,
      </if>
      <if test="isallowOut != null">
        ISALLOW_OUT,
      </if>
      <if test="instrument != null">
        INSTRUMENT,
      </if>
      <if test="pkValuetype != null">
        PK_VALUETYPE,
      </if>
      <if test="valueways != null">
        VALUEWAYS,
      </if>
      <if test="textvalue != null">
        TEXTVALUE,
      </if>
      <if test="refvalue != null">
        REFVALUE,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="formattedEntry != null">
        FORMATTED_ENTRY,
      </if>
      <if test="minLimit != null">
        MIN_LIMIT,
      </if>
      <if test="maxLimit != null">
        MAX_LIMIT,
      </if>
      <if test="englishdescription != null">
        ENGLISHDESCRIPTION,
      </if>
      <if test="pkListTable != null">
        PK_LIST_TABLE,
      </if>
      <if test="pkTaskB != null">
        PK_TASK_B,
      </if>
      <if test="ts != null">
        TS,
      </if>
      <if test="dr != null">
        DR,
      </if>
      <if test="pkTestconditionitemBack != null">
        PK_TESTCONDITIONITEM_BACK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkTaskS != null">
        #{pkTaskS,jdbcType=CHAR},
      </if>
      <if test="pkTestconditionitem != null">
        #{pkTestconditionitem,jdbcType=VARCHAR},
      </if>
      <if test="conditionstatus != null">
        #{conditionstatus,jdbcType=VARCHAR},
      </if>
      <if test="isoptional != null">
        #{isoptional,jdbcType=CHAR},
      </if>
      <if test="isallowOut != null">
        #{isallowOut,jdbcType=CHAR},
      </if>
      <if test="instrument != null">
        #{instrument,jdbcType=VARCHAR},
      </if>
      <if test="pkValuetype != null">
        #{pkValuetype,jdbcType=VARCHAR},
      </if>
      <if test="valueways != null">
        #{valueways,jdbcType=DECIMAL},
      </if>
      <if test="textvalue != null">
        #{textvalue,jdbcType=VARCHAR},
      </if>
      <if test="refvalue != null">
        #{refvalue,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="formattedEntry != null">
        #{formattedEntry,jdbcType=VARCHAR},
      </if>
      <if test="minLimit != null">
        #{minLimit,jdbcType=DECIMAL},
      </if>
      <if test="maxLimit != null">
        #{maxLimit,jdbcType=DECIMAL},
      </if>
      <if test="englishdescription != null">
        #{englishdescription,jdbcType=VARCHAR},
      </if>
      <if test="pkListTable != null">
        #{pkListTable,jdbcType=CHAR},
      </if>
      <if test="pkTaskB != null">
        #{pkTaskB,jdbcType=CHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=CHAR},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=DECIMAL},
      </if>
      <if test="pkTestconditionitemBack != null">
        #{pkTestconditionitemBack,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.besbing.Entities.QcTaskSExample" resultType="java.lang.Long">
    select count(*) from QC_TASK_S
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update QC_TASK_S
    <set>
      <if test="record.pkTaskS != null">
        PK_TASK_S = #{record.pkTaskS,jdbcType=CHAR},
      </if>
      <if test="record.pkTestconditionitem != null">
        PK_TESTCONDITIONITEM = #{record.pkTestconditionitem,jdbcType=VARCHAR},
      </if>
      <if test="record.conditionstatus != null">
        CONDITIONSTATUS = #{record.conditionstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isoptional != null">
        ISOPTIONAL = #{record.isoptional,jdbcType=CHAR},
      </if>
      <if test="record.isallowOut != null">
        ISALLOW_OUT = #{record.isallowOut,jdbcType=CHAR},
      </if>
      <if test="record.instrument != null">
        INSTRUMENT = #{record.instrument,jdbcType=VARCHAR},
      </if>
      <if test="record.pkValuetype != null">
        PK_VALUETYPE = #{record.pkValuetype,jdbcType=VARCHAR},
      </if>
      <if test="record.valueways != null">
        VALUEWAYS = #{record.valueways,jdbcType=DECIMAL},
      </if>
      <if test="record.textvalue != null">
        TEXTVALUE = #{record.textvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.refvalue != null">
        REFVALUE = #{record.refvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.formattedEntry != null">
        FORMATTED_ENTRY = #{record.formattedEntry,jdbcType=VARCHAR},
      </if>
      <if test="record.minLimit != null">
        MIN_LIMIT = #{record.minLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.maxLimit != null">
        MAX_LIMIT = #{record.maxLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.englishdescription != null">
        ENGLISHDESCRIPTION = #{record.englishdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.pkListTable != null">
        PK_LIST_TABLE = #{record.pkListTable,jdbcType=CHAR},
      </if>
      <if test="record.pkTaskB != null">
        PK_TASK_B = #{record.pkTaskB,jdbcType=CHAR},
      </if>
      <if test="record.ts != null">
        TS = #{record.ts,jdbcType=CHAR},
      </if>
      <if test="record.dr != null">
        DR = #{record.dr,jdbcType=DECIMAL},
      </if>
      <if test="record.pkTestconditionitemBack != null">
        PK_TESTCONDITIONITEM_BACK = #{record.pkTestconditionitemBack,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update QC_TASK_S
    set PK_TASK_S = #{record.pkTaskS,jdbcType=CHAR},
      PK_TESTCONDITIONITEM = #{record.pkTestconditionitem,jdbcType=VARCHAR},
      CONDITIONSTATUS = #{record.conditionstatus,jdbcType=VARCHAR},
      ISOPTIONAL = #{record.isoptional,jdbcType=CHAR},
      ISALLOW_OUT = #{record.isallowOut,jdbcType=CHAR},
      INSTRUMENT = #{record.instrument,jdbcType=VARCHAR},
      PK_VALUETYPE = #{record.pkValuetype,jdbcType=VARCHAR},
      VALUEWAYS = #{record.valueways,jdbcType=DECIMAL},
      TEXTVALUE = #{record.textvalue,jdbcType=VARCHAR},
      REFVALUE = #{record.refvalue,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      FORMATTED_ENTRY = #{record.formattedEntry,jdbcType=VARCHAR},
      MIN_LIMIT = #{record.minLimit,jdbcType=DECIMAL},
      MAX_LIMIT = #{record.maxLimit,jdbcType=DECIMAL},
      ENGLISHDESCRIPTION = #{record.englishdescription,jdbcType=VARCHAR},
      PK_LIST_TABLE = #{record.pkListTable,jdbcType=CHAR},
      PK_TASK_B = #{record.pkTaskB,jdbcType=CHAR},
      TS = #{record.ts,jdbcType=CHAR},
      DR = #{record.dr,jdbcType=DECIMAL},
      PK_TESTCONDITIONITEM_BACK = #{record.pkTestconditionitemBack,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.besbing.Entities.QcTaskS">
    update QC_TASK_S
    <set>
      <if test="pkTestconditionitem != null">
        PK_TESTCONDITIONITEM = #{pkTestconditionitem,jdbcType=VARCHAR},
      </if>
      <if test="conditionstatus != null">
        CONDITIONSTATUS = #{conditionstatus,jdbcType=VARCHAR},
      </if>
      <if test="isoptional != null">
        ISOPTIONAL = #{isoptional,jdbcType=CHAR},
      </if>
      <if test="isallowOut != null">
        ISALLOW_OUT = #{isallowOut,jdbcType=CHAR},
      </if>
      <if test="instrument != null">
        INSTRUMENT = #{instrument,jdbcType=VARCHAR},
      </if>
      <if test="pkValuetype != null">
        PK_VALUETYPE = #{pkValuetype,jdbcType=VARCHAR},
      </if>
      <if test="valueways != null">
        VALUEWAYS = #{valueways,jdbcType=DECIMAL},
      </if>
      <if test="textvalue != null">
        TEXTVALUE = #{textvalue,jdbcType=VARCHAR},
      </if>
      <if test="refvalue != null">
        REFVALUE = #{refvalue,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="formattedEntry != null">
        FORMATTED_ENTRY = #{formattedEntry,jdbcType=VARCHAR},
      </if>
      <if test="minLimit != null">
        MIN_LIMIT = #{minLimit,jdbcType=DECIMAL},
      </if>
      <if test="maxLimit != null">
        MAX_LIMIT = #{maxLimit,jdbcType=DECIMAL},
      </if>
      <if test="englishdescription != null">
        ENGLISHDESCRIPTION = #{englishdescription,jdbcType=VARCHAR},
      </if>
      <if test="pkListTable != null">
        PK_LIST_TABLE = #{pkListTable,jdbcType=CHAR},
      </if>
      <if test="pkTaskB != null">
        PK_TASK_B = #{pkTaskB,jdbcType=CHAR},
      </if>
      <if test="ts != null">
        TS = #{ts,jdbcType=CHAR},
      </if>
      <if test="dr != null">
        DR = #{dr,jdbcType=DECIMAL},
      </if>
      <if test="pkTestconditionitemBack != null">
        PK_TESTCONDITIONITEM_BACK = #{pkTestconditionitemBack,jdbcType=VARCHAR},
      </if>
    </set>
    where PK_TASK_S = #{pkTaskS,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.besbing.Entities.QcTaskS">
    update QC_TASK_S
    set PK_TESTCONDITIONITEM = #{pkTestconditionitem,jdbcType=VARCHAR},
      CONDITIONSTATUS = #{conditionstatus,jdbcType=VARCHAR},
      ISOPTIONAL = #{isoptional,jdbcType=CHAR},
      ISALLOW_OUT = #{isallowOut,jdbcType=CHAR},
      INSTRUMENT = #{instrument,jdbcType=VARCHAR},
      PK_VALUETYPE = #{pkValuetype,jdbcType=VARCHAR},
      VALUEWAYS = #{valueways,jdbcType=DECIMAL},
      TEXTVALUE = #{textvalue,jdbcType=VARCHAR},
      REFVALUE = #{refvalue,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      FORMATTED_ENTRY = #{formattedEntry,jdbcType=VARCHAR},
      MIN_LIMIT = #{minLimit,jdbcType=DECIMAL},
      MAX_LIMIT = #{maxLimit,jdbcType=DECIMAL},
      ENGLISHDESCRIPTION = #{englishdescription,jdbcType=VARCHAR},
      PK_LIST_TABLE = #{pkListTable,jdbcType=CHAR},
      PK_TASK_B = #{pkTaskB,jdbcType=CHAR},
      TS = #{ts,jdbcType=CHAR},
      DR = #{dr,jdbcType=DECIMAL},
      PK_TESTCONDITIONITEM_BACK = #{pkTestconditionitemBack,jdbcType=VARCHAR}
    where PK_TASK_S = #{pkTaskS,jdbcType=CHAR}
  </update>
</mapper>